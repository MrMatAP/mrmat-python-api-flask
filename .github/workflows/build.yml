#
# Main workflow to build and release

name: Main

#
# Operational Variables

env:
  MAJOR: 0
  MINOR: 0
  PYTHON_VERSION: 3.9.6

#
# Establish when the workflow is run
# What we want is that a release is made whenever we merge into master. Here is an example:
# if: ${{ github.event_name == 'pull_request' && github.event.pull_request.merged == true && github.base_ref == 'refs/heads/main' }}
# But really, we can also just say that a push into master causes a release. Whether that must come from a PR
# can be controlled via branch protection

on:
  push:
    branches-ignore:
    - master
  pull_request: {}

#
# Workflow

jobs:

  build:
    runs-on: ubuntu-latest
    steps:

    - name: Determine whether this is a release build
      if: ${{ github.event_name == 'pull_request' && github.base_ref == 'main' }}
      env:
        IS_RELEASE: "true"
      run: echo "We will be performing a release upon success"

    - name: Checkout out our code
      uses: actions/checkout@v2

    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Establish a cache for dependencies
      uses: actions/cache@v2
      with:
        path: ~/.local
        key: ${{ runner.os }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --user wheel
        pip install --user -r requirements.txt
        pip install --user -r test-requirements.txt

    - name: Lint
      run: |
        flake8 --statistics
        pylint mrmat_python_api_flask

    - name: Test
      run: |
        python ./setup.py install
        python -m pytest

    - name: Upload test results
      uses: actions/upload-artifact@v2
      if: ${{ always() }}
      with:
        name: tests
        path: build/junit.xml

    - name: Upload coverage
      uses: actions/upload-artifact@v2
      with:
        name: coverage
        path: build/coverage.xml

    - name: Conditionally perform a release
      if: ${{ env.IS_RELEASE == 'true' }}
      uses: elgohr/Github-Release-Action@master
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
      with:
        args: Creating release
